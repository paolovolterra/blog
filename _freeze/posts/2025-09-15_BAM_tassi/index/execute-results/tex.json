{
  "hash": "16668624c93d9c4fd485a4ee011aebeb",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"BAM – Tassi e Prestiti\"\nformat:\n  pdf:\n    engine: typst   # veloce, già presente nel tuo setup\n    toc: true\n    number-sections: true\noutput-file: BAM_tassi.pdf\nexecute:\n  cache: true\n---\n\n# [MIR0300](https://infostat.bancaditalia.it/inquiry/home?spyglass/taxo:CUBESET=/PUBBL_00/PUBBL_00_02_01_04/PUBBL_00_02_01_04_02&ITEMSELEZ=MIR0300:true&OPEN=true/&ep:LC=IT&COMM=BANKITALIA&ENV=LIVE&CTX=DIFF&IDX=2&/view:CUBEIDS=MIR0300)\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport pandas as pd\npd.set_option(\"display.max_columns\", None)   # mostra tutte le colonne\npd.set_option(\"display.max_colwidth\", None)  # non troncare i contenuti delle celle\npd.set_option(\"display.width\", None)         # non troncare la tabella a destra\n\nimport sqlite3\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nimport re\nimport os\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nDB_PATH = \"D:/files/Bankit.sqlite\" \nconn = sqlite3.connect(DB_PATH)\ntabella = 'MIR0300'\ndf = pd.read_sql(f\"SELECT DATA_OSS, SERIE, VALORE FROM {tabella} order by 2 desc,1\", conn)\ndf[\"DATA_OSS\"] = pd.to_datetime(df[\"DATA_OSS\"])\n\ndef parse_tokens(s: str):\n    parts = str(s).split(\".\")\n    return pd.Series({\n        \"COD_MIR\": parts[3] if len(parts) > 3 else None,\n        \"COD_DURATA\": parts[4] if len(parts) > 4 else None,\n        \"COD_IMPORTO\": parts[6] if len(parts) > 6 else None,\n    })\n\nparsed = df[\"SERIE\"].apply(parse_tokens)\ndf = pd.concat([df, parsed], axis=1)\nmap_labels = {\n    \"MIR5411\": \"Prestiti\", # diversi dai conti correnti, prestiti rotativi e carte di credito\n    \"MIR5414\": \"Prestiti garantiti\", #  diversi dai conti correnti, prestiti rotativi e carte di credito\n    \"MIR5427\": \"Prestiti effettivi\", # diversi dai conti correnti, prestiti rotativi e carte di credito\n    \"5\": \"< 1Y\",\n    \"9\": \"Tot.\",\n    \"46\": \"< 1M€\",\n    \"47\": \"> 1M€\",\n    \"1000\": \"Tot\",\n}\ndf[\"MIR_DESC\"]     = df[\"COD_MIR\"].map(map_labels)\ndf[\"DURATA_DESC\"]  = df[\"COD_DURATA\"].map(map_labels)\ndf[\"IMPORTO_DESC\"] = df[\"COD_IMPORTO\"].map(map_labels)\ndef compose_label(row):\n    parts = []\n    if pd.notna(row.get(\"MIR_DESC\")):     parts.append(row[\"MIR_DESC\"])\n    if pd.notna(row.get(\"DURATA_DESC\")):  parts.append(row[\"DURATA_DESC\"])\n    if pd.notna(row.get(\"IMPORTO_DESC\")): parts.append(row[\"IMPORTO_DESC\"])\n    return \" - \".join(parts) if parts else None\ndf[\"SERIE_DECOD\"] = df.apply(compose_label, axis=1)\ntab = df.pivot_table(\n    index=\"DATA_OSS\",\n    columns=\"SERIE_DECOD\",\n    values=\"VALORE\",\n    aggfunc=\"sum\"\n).sort_index(ascending=False)\ntab\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>SERIE_DECOD</th>\n      <th>Prestiti - &lt; 1Y - Tot</th>\n      <th>Prestiti - Tot. - &lt; 1M€</th>\n      <th>Prestiti - Tot. - &gt; 1M€</th>\n      <th>Prestiti - Tot. - Tot</th>\n      <th>Prestiti effettivi - Tot. - &lt; 1M€</th>\n      <th>Prestiti effettivi - Tot. - &gt; 1M€</th>\n      <th>Prestiti effettivi - Tot. - Tot</th>\n      <th>Prestiti garantiti - Tot. - &lt; 1M€</th>\n      <th>Prestiti garantiti - Tot. - &gt; 1M€</th>\n      <th>Prestiti garantiti - Tot. - Tot</th>\n    </tr>\n    <tr>\n      <th>DATA_OSS</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2025-07-31</th>\n      <td>41444.7</td>\n      <td>15353.1</td>\n      <td>33000.7</td>\n      <td>48353.8</td>\n      <td>14135.6</td>\n      <td>25695.1</td>\n      <td>39830.7</td>\n      <td>2634.3</td>\n      <td>3081.0</td>\n      <td>5715.3</td>\n    </tr>\n    <tr>\n      <th>2025-06-30</th>\n      <td>45444.2</td>\n      <td>17544.1</td>\n      <td>33380.4</td>\n      <td>50924.5</td>\n      <td>16423.3</td>\n      <td>27418.5</td>\n      <td>43841.8</td>\n      <td>2693.5</td>\n      <td>3115.1</td>\n      <td>5808.6</td>\n    </tr>\n    <tr>\n      <th>2025-05-31</th>\n      <td>32798.8</td>\n      <td>14223.6</td>\n      <td>22332.3</td>\n      <td>36555.9</td>\n      <td>13264.9</td>\n      <td>17487.6</td>\n      <td>30752.5</td>\n      <td>2321.8</td>\n      <td>2272.2</td>\n      <td>4594.0</td>\n    </tr>\n    <tr>\n      <th>2025-04-30</th>\n      <td>34468.3</td>\n      <td>14037.4</td>\n      <td>24656.4</td>\n      <td>38693.8</td>\n      <td>12779.1</td>\n      <td>19764.9</td>\n      <td>32544.0</td>\n      <td>2384.9</td>\n      <td>2183.7</td>\n      <td>4568.6</td>\n    </tr>\n    <tr>\n      <th>2025-03-31</th>\n      <td>42751.6</td>\n      <td>16958.8</td>\n      <td>33118.5</td>\n      <td>50077.3</td>\n      <td>15719.1</td>\n      <td>25212.7</td>\n      <td>40931.8</td>\n      <td>2710.8</td>\n      <td>3540.5</td>\n      <td>6251.4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2003-05-31</th>\n      <td>24050.6</td>\n      <td>12057.6</td>\n      <td>15851.6</td>\n      <td>27909.2</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2003-04-30</th>\n      <td>24476.0</td>\n      <td>11797.4</td>\n      <td>16525.0</td>\n      <td>28322.4</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2003-03-31</th>\n      <td>23604.2</td>\n      <td>12203.1</td>\n      <td>15033.9</td>\n      <td>27237.1</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2003-02-28</th>\n      <td>21008.9</td>\n      <td>11544.9</td>\n      <td>14682.6</td>\n      <td>26227.5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2003-01-31</th>\n      <td>20089.1</td>\n      <td>12182.9</td>\n      <td>14234.2</td>\n      <td>26417.1</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>271 rows × 10 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\nprestiti = tab[[\n    \"Prestiti - Tot. - Tot\",\n    \"Prestiti - Tot. - < 1M€\",\n    \"Prestiti - Tot. - > 1M€\"\n]]\n\nplt.figure(figsize=(10,6))\n# plt.plot(prestiti.index, prestiti[\"Prestiti - Tot. - Tot\"], label=\"Totale\")\nplt.plot(prestiti.index, prestiti[\"Prestiti - Tot. - < 1M€\"], label=\"< 1M€\")\nplt.plot(prestiti.index, prestiti[\"Prestiti - Tot. - > 1M€\"], label=\"> 1M€\")\n\nplt.title(\"Nuove erogazioni di prestiti alle imprese\")\nplt.xlabel(\"Data\")\nplt.ylabel(\"Milioni di euro\")\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-pdf/cell-4-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Calcolo di prestiti_smooth come media mobile a 6 mesi\nprestiti_smooth = (\n    tab[[\n        \"Prestiti - Tot. - Tot\",\n        \"Prestiti - Tot. - < 1M€\",\n        \"Prestiti - Tot. - > 1M€\"\n    ]]\n    .rolling(window=6, min_periods=1, center=True)\n    .mean()\n)\n\nprestiti_smooth.head(12)\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>SERIE_DECOD</th>\n      <th>Prestiti - Tot. - Tot</th>\n      <th>Prestiti - Tot. - &lt; 1M€</th>\n      <th>Prestiti - Tot. - &gt; 1M€</th>\n    </tr>\n    <tr>\n      <th>DATA_OSS</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2025-07-31</th>\n      <td>45278.066667</td>\n      <td>15706.933333</td>\n      <td>29571.133333</td>\n    </tr>\n    <tr>\n      <th>2025-06-30</th>\n      <td>43632.000000</td>\n      <td>15289.550000</td>\n      <td>28342.450000</td>\n    </tr>\n    <tr>\n      <th>2025-05-31</th>\n      <td>44921.060000</td>\n      <td>15623.400000</td>\n      <td>29297.660000</td>\n    </tr>\n    <tr>\n      <th>2025-04-30</th>\n      <td>43813.016667</td>\n      <td>15316.666667</td>\n      <td>28496.350000</td>\n    </tr>\n    <tr>\n      <th>2025-03-31</th>\n      <td>42481.550000</td>\n      <td>15028.083333</td>\n      <td>27453.466667</td>\n    </tr>\n    <tr>\n      <th>2025-02-28</th>\n      <td>42898.333333</td>\n      <td>15106.433333</td>\n      <td>27791.900000</td>\n    </tr>\n    <tr>\n      <th>2025-01-31</th>\n      <td>42983.850000</td>\n      <td>15264.083333</td>\n      <td>27719.766667</td>\n    </tr>\n    <tr>\n      <th>2024-12-31</th>\n      <td>43304.833333</td>\n      <td>15517.666667</td>\n      <td>27787.166667</td>\n    </tr>\n    <tr>\n      <th>2024-11-30</th>\n      <td>41155.200000</td>\n      <td>15125.416667</td>\n      <td>26029.783333</td>\n    </tr>\n    <tr>\n      <th>2024-10-31</th>\n      <td>38986.700000</td>\n      <td>14430.400000</td>\n      <td>24556.300000</td>\n    </tr>\n    <tr>\n      <th>2024-09-30</th>\n      <td>39581.650000</td>\n      <td>14696.133333</td>\n      <td>24885.516667</td>\n    </tr>\n    <tr>\n      <th>2024-08-31</th>\n      <td>38003.350000</td>\n      <td>14438.750000</td>\n      <td>23564.600000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nplt.figure(figsize=(10,6))\nplt.plot(prestiti_smooth.index, prestiti_smooth[\"Prestiti - Tot. - < 1M€\"], \n         label=\"< 1M€ (media 6 mesi)\", linewidth=2, color=\"tab:blue\")\nplt.plot(prestiti_smooth.index, prestiti_smooth[\"Prestiti - Tot. - > 1M€\"], \n         label=\"> 1M€ (media 6 mesi)\", linewidth=2, color=\"tab:orange\")\n\nplt.title(\"Nuove erogazioni di prestiti alle imprese (media mobile 6 mesi)\", fontsize=14)\nplt.xlabel(\"Data\", fontsize=12)\nplt.ylabel(\"Milioni di euro\", fontsize=12)\nplt.legend()\nplt.grid(True, linestyle=\"--\", alpha=0.6)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-pdf/cell-6-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ncol_big = \"Prestiti - Tot. - > 1M€\"\ncol_small = \"Prestiti - Tot. - < 1M€\"\n\nfig, ax = plt.subplots(figsize=(12,6))\nax.plot(prestiti_smooth.index, prestiti_smooth[col_small], label=\"< 1M€ (media 6 mesi)\", linewidth=2)\nax.plot(prestiti_smooth.index, prestiti_smooth[col_big],   label=\"> 1M€ (media 6 mesi)\", linewidth=2)\n\nax.set_title(\"Nuove erogazioni di prestiti alle imprese (media mobile 6 mesi)\", fontsize=14, weight=\"bold\")\nax.set_xlabel(\"Data\"); ax.set_ylabel(\"Milioni di euro\")\nax.grid(True, linestyle=\"--\", alpha=0.4)\nax.legend(frameon=False)\n\ndef annotate_event(date_str, text, color=\"#333\", y_offset=8000):\n    \"\"\"Aggancia l’annotazione al timestamp dell’indice più vicino a date_str.\"\"\"\n    d = pd.to_datetime(date_str)\n    # trova l’indice più vicino\n    idx = prestiti_smooth.index.get_indexer([d], method=\"nearest\")[0]\n    x = prestiti_smooth.index[idx]\n    y = prestiti_smooth.loc[x, col_big]\n    if np.isnan(y):\n        # fallback: se NaN su quella serie, usa l'altra\n        y = prestiti_smooth.loc[x, col_small]\n    ax.annotate(\n        text, xy=(x, y), xytext=(x, y + y_offset),\n        arrowprops=dict(arrowstyle=\"->\", color=color, lw=1.2),\n        fontsize=10, color=color, weight=\"bold\"\n    )\n\n# Annotazioni (usa date approssimate: la funzione sceglie il punto più vicino)\nannotate_event(\"2008-09-01\", \"Crisi finanziaria globale\", \"#b22222\", y_offset=9000)\nannotate_event(\"2012-06-01\", \"Crisi debito sovrano\",     \"#8b0000\", y_offset=7000)\nannotate_event(\"2020-04-01\", \"Covid-19\",                 \"#006400\", y_offset=9000)\nannotate_event(\"2023-03-01\", \"Stretta BCE\",              \"#00008b\", y_offset=7000)\n\n# ax.axvspan(pd.Timestamp(\"2008-09-01\"), pd.Timestamp(\"2009-06-01\"), color=\"#b22222\", alpha=0.08)\n\n# Spine pulite\nfor spine in ax.spines.values():\n    spine.set_visible(False)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-pdf/cell-7-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\ncol_big = \"Prestiti - Tot. - > 1M€\"\ncol_small = \"Prestiti - Tot. - < 1M€\"\nbase_date = \"2020-01-01\"\n\n# Copia del dataframe\nprestiti_base100 = prestiti.copy()\n\n# Normalizzazione in base 100 dal primo valore disponibile ≥ 2020-01\nfor col in [col_big, col_small]:\n    base_value = prestiti_base100.loc[prestiti_base100.index >= base_date, col].iloc[0]\n    prestiti_base100[col] = prestiti_base100[col] / base_value * 100\n\n# Applica smoothing con media mobile 6 mesi centrata\nprestiti_smooth100 = prestiti_base100.rolling(window=6, center=True).mean()\n```\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nbase_year = 2020\nprestiti_base = prestiti_smooth.loc[str(base_year)]\n\n# calcolo della media 2020 per ogni colonna\nbase_values = prestiti_base.mean()\n\nprestiti_index = prestiti_smooth / base_values * 100\n\nplt.figure(figsize=(10,6))\nplt.plot(prestiti_index.index, prestiti_index[col_small], label=\"< 1M€ (base 2020=100, media 6 mesi)\")\nplt.plot(prestiti_index.index, prestiti_index[col_big], label=\"> 1M€ (base 2020=100, media 6 mesi)\")\n\nplt.axhline(100, color=\"gray\", linestyle=\"--\")\nplt.title(\"Nuove erogazioni di prestiti alle imprese (base 2020=100, media 6 mesi)\")\nplt.xlabel(\"Data\")\nplt.ylabel(\"Indice (2020=100)\")\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-pdf/cell-9-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ncol_small = \"Prestiti - Tot. - < 1M€\"\ncol_big   = \"Prestiti - Tot. - > 1M€\"\n\n# --- funzione annotazione robusta (aggancia al punto più vicino) ---\ndef annotate_event(ax, df, date_str, text, series_col, color=\"#333\", y_offset=6):\n    d = pd.to_datetime(date_str)\n    idx = df.index.get_indexer([d], method=\"nearest\")[0]\n    x  = df.index[idx]\n    y  = df.loc[x, series_col]\n    ax.annotate(text, xy=(x, y), xytext=(x, y + y_offset),\n                arrowprops=dict(arrowstyle=\"->\", color=color, lw=1.2),\n                fontsize=10, color=color, weight=\"bold\")\n\n# --- plot base 2020=100 con media 6 mesi (già in prestiti_index) ---\nfig, ax = plt.subplots(figsize=(12,6))\n\nax.plot(prestiti_index.index, prestiti_index[col_small],\n        label=\"< 1M€ (base 2020=100, media 6 mesi)\", lw=2, color=\"#1f77b4\")\nax.plot(prestiti_index.index, prestiti_index[col_big],\n        label=\"> 1M€ (base 2020=100, media 6 mesi)\", lw=2, color=\"#ff7f0e\")\n\nax.set_title(\"Nuove erogazioni di prestiti alle imprese (base 2020=100, media 6 mesi)\",\n             fontsize=14, weight=\"bold\")\nax.set_xlabel(\"Data\"); ax.set_ylabel(\"Indice (2020=100)\")\nax.axhline(100, color=\"gray\", ls=\"--\", lw=1)\nax.grid(True, ls=\"--\", alpha=0.5)\n\n# --- bande verticali per i periodi-chiave ---\nbands = [\n    (\"2008-09-01\", \"2009-06-01\", \"#b22222\", 0.08, \"Crisi 2008-09\"),\n    (\"2011-07-01\", \"2012-12-01\", \"#8b0000\", 0.08, \"Crisi debito sovrano\"),\n    (\"2020-03-01\", \"2021-03-01\", \"#006400\", 0.08, \"Covid-19\"),\n    (\"2022-07-01\", \"2023-12-01\", \"#00008b\", 0.08, \"Stretta BCE\"),\n]\nfor start, end, color, alpha, _ in bands:\n    ax.axvspan(pd.to_datetime(start), pd.to_datetime(end), color=color, alpha=alpha)\n\n# --- frecce/etichette (uso la serie >1M€ per ancorare le frecce) ---\nannotate_event(ax, prestiti_index, \"2008-09-01\", \"Crisi finanziaria globale\",\n               col_big, color=\"#b22222\", y_offset=4)\nannotate_event(ax, prestiti_index, \"2012-06-01\", \"Crisi debito sovrano\",\n               col_big, color=\"#8b0000\", y_offset=4)\nannotate_event(ax, prestiti_index, \"2020-05-01\", \"Covid-19\",\n               col_big, color=\"#006400\", y_offset=6)\nannotate_event(ax, prestiti_index, \"2023-03-01\", \"Stretta BCE\",\n               col_big, color=\"#00008b\", y_offset=4)\n\n# legenda pulita e stile minimal\nax.legend(frameon=False, loc=\"upper right\")\nfor s in ax.spines.values():\n    s.set_visible(False)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-pdf/cell-10-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\nOttimo, ora il **YoY (Year-over-Year)** è molto più leggibile 👍.\nTi faccio una lettura dei trend principali mettendoli in relazione con gli eventi storici ed economici che spiegano le dinamiche delle nuove erogazioni di prestiti alle imprese:\n\n---\n\n### 🔹 2003-2007: espansione pre-crisi\n\n* Le nuove erogazioni, soprattutto **>1M€**, crescono con tassi YoY anche del +20/40%.\n* **Cause**: fase di crescita economica mondiale, credito abbondante, tassi BCE relativamente bassi, forte leva finanziaria nelle imprese.\n* È il periodo in cui il credito bancario si espande prima della crisi subprime.\n\n---\n\n### 🔹 2008-2012: crisi finanziaria e crisi del debito sovrano\n\n* **Crollo del 2008-09**: YoY crolla a –40/–50% → riflette il credit crunch dovuto al fallimento Lehman e al congelamento dei mercati interbancari.\n* **Breve rimbalzo 2010** (stimoli fiscali e monetari post-crisi).\n* **Nuovo calo 2011-2012**: crisi del debito sovrano europeo → banche italiane riducono fortemente l’offerta di credito, soprattutto per i prestiti >1M€ (imprese medio-grandi).\n\n---\n\n### 🔹 2013-2016: stagnazione e deleveraging\n\n* YoY mediamente negativo o intorno allo zero → segnale di deleveraging: le imprese riducono l’indebitamento, le banche razionano il credito.\n* **Cause**: recessione italiana, stretta regolamentare (Basilea 3), crescita bassa, aumento sofferenze bancarie.\n* Prestiti <1M€ (PMI e microimprese) più stabili ma comunque su livelli bassi.\n\n---\n\n### 🔹 2017-2019: ripresa moderata\n\n* Tassi YoY tornano positivi, ma senza picchi.\n* **Cause**: politica monetaria ultra-espansiva BCE (QE, tassi negativi), spread BTP-Bund sotto controllo, fiducia in miglioramento.\n* La ripresa resta fragile: crescita limitata, domanda di credito non esplosiva.\n\n---\n\n### 🔹 2020-2021: shock pandemico\n\n* **Crollo immediato** marzo 2020 (lockdown, incertezza).\n* **Boom successivo**: misure straordinarie (garanzie pubbliche MCC, moratorie, liquidità BCE) → picco YoY oltre +60% sia <1M€ che >1M€.\n* Questa fase segna il massimo delle nuove erogazioni negli ultimi 20 anni.\n\n---\n\n### 🔹 2022-2023: inflazione e stretta BCE\n\n* YoY torna fortemente negativo (–20/–30%).\n* **Cause**: aumento tassi BCE dal luglio 2022, inflazione elevata, costo del credito schizzato al 6-7% medio.\n* Colpisce soprattutto prestiti >1M€, cioè le imprese più esposte a fabbisogni di capitale per investimenti.\n\n---\n\n### 🔹 2024-2025: stabilizzazione fragile\n\n* YoY rimane volatile ma meno estremo.\n* **Cause**: politica monetaria ancora restrittiva, domanda debole, incertezza geopolitica.\n* Si intravede una differenza strutturale: i <1M€ tendono a essere più resilienti, mentre i >1M€ mostrano maggiore ciclicità.\n\n---\n\n📌 **Sintesi:**\n\n* I prestiti **>1M€** sono molto più sensibili al ciclo economico e agli shock finanziari → riflettono investimenti e grandi operazioni aziendali.\n* I prestiti **<1M€** sono più legati al capitale circolante delle PMI → meno volatili, ma soffrono nelle fasi di stretta creditizia prolungata.\n* I picchi YoY (positivi e negativi) coincidono con **crisi sistemiche o interventi pubblici** (2008, 2012, 2020, 2022).\n\n---\n\nVuoi che ti preparo un **grafico annotato** (con frecce e label “Crisi 2008”, “QE BCE”, “Covid”, “Stretta 2022”) così diventa anche un ottimo materiale da presentazione?\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# Calcola YoY (variazione % rispetto a 12 mesi prima)\nprestiti_yoy = prestiti.pct_change(periods=12) * 100\n\nplt.figure(figsize=(10,6))\nplt.plot(prestiti_yoy.index, prestiti_yoy[\"Prestiti - Tot. - < 1M€\"], label=\"< 1M€\")\nplt.plot(prestiti_yoy.index, prestiti_yoy[\"Prestiti - Tot. - > 1M€\"], label=\"> 1M€\")\n\nplt.axhline(0, color=\"gray\", linewidth=0.8, linestyle=\"--\")\nplt.title(\"Nuove erogazioni di prestiti alle imprese – Variazioni % YoY\")\nplt.xlabel(\"Data\")\nplt.ylabel(\"% YoY\")\nplt.legend()\nplt.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-pdf/cell-11-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\n# --- 1. YoY mensile ---\nyoy_m = prestiti.pct_change(12) * 100\n\n# --- 2. YoY trimestrale ---\nprestiti_q = prestiti.resample(\"Q\").sum()\nyoy_q = prestiti_q.pct_change(4) * 100\n\n# --- 3. YoY su media mobile annuale ---\nprestiti_ma = prestiti.rolling(12).mean()\nyoy_ma = prestiti_ma.pct_change(12) * 100\n\n# --- Plot ---\nfig, axes = plt.subplots(3, 1, figsize=(12, 14), sharey=False)\n\n# 1. Mensile\naxes[0].plot(yoy_m.index, yoy_m[\"Prestiti - Tot. - < 1M€\"], label=\"<1M€\")\naxes[0].plot(yoy_m.index, yoy_m[\"Prestiti - Tot. - > 1M€\"], label=\">1M€\")\naxes[0].axhline(0, color=\"gray\", ls=\"--\", lw=0.8)\naxes[0].set_title(\"YoY mensile\")\naxes[0].set_ylabel(\"%\")\naxes[0].legend(); axes[0].grid(True)\n\n# 2. Trimestrale\naxes[1].plot(yoy_q.index, yoy_q[\"Prestiti - Tot. - < 1M€\"], label=\"<1M€\")\naxes[1].plot(yoy_q.index, yoy_q[\"Prestiti - Tot. - > 1M€\"], label=\">1M€\")\naxes[1].axhline(0, color=\"gray\", ls=\"--\", lw=0.8)\naxes[1].set_title(\"YoY trimestrale\")\naxes[1].set_ylabel(\"%\")\naxes[1].legend(); axes[1].grid(True)\n\n# 3. Media mobile annuale\naxes[2].plot(yoy_ma.index, yoy_ma[\"Prestiti - Tot. - < 1M€\"], label=\"<1M€\")\naxes[2].plot(yoy_ma.index, yoy_ma[\"Prestiti - Tot. - > 1M€\"], label=\">1M€\")\naxes[2].axhline(0, color=\"gray\", ls=\"--\", lw=0.8)\naxes[2].set_title(\"YoY su medie mobili annuali (12m MA)\")\naxes[2].set_ylabel(\"%\")\naxes[2].legend(); axes[2].grid(True)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-pdf/cell-12-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# --- 1. MoM mensile ---\nmom_m = prestiti.pct_change(1) * 100\n\n# --- 2. MoM trimestrale ---\nprestiti_q = prestiti.resample(\"Q\").sum()\nmom_q = prestiti_q.pct_change(1) * 100\n\n# --- 3. MoM su media mobile 3 mesi ---\nprestiti_ma3 = prestiti.rolling(3).mean()\nmom_ma3 = prestiti_ma3.pct_change(1) * 100\n\n# --- Plot ---\nfig, axes = plt.subplots(3, 1, figsize=(12, 14), sharey=False)\n\n# 1. Mensile\naxes[0].plot(mom_m.index, mom_m[\"Prestiti - Tot. - < 1M€\"], label=\"<1M€\")\naxes[0].plot(mom_m.index, mom_m[\"Prestiti - Tot. - > 1M€\"], label=\">1M€\")\naxes[0].axhline(0, color=\"gray\", ls=\"--\", lw=0.8)\naxes[0].set_title(\"MoM mensile\")\naxes[0].set_ylabel(\"%\")\naxes[0].legend(); axes[0].grid(True)\n\n# 2. Trimestrale\naxes[1].plot(mom_q.index, mom_q[\"Prestiti - Tot. - < 1M€\"], label=\"<1M€\")\naxes[1].plot(mom_q.index, mom_q[\"Prestiti - Tot. - > 1M€\"], label=\">1M€\")\naxes[1].axhline(0, color=\"gray\", ls=\"--\", lw=0.8)\naxes[1].set_title(\"MoM trimestrale\")\naxes[1].set_ylabel(\"%\")\naxes[1].legend(); axes[1].grid(True)\n\n# 3. Media mobile 3 mesi\naxes[2].plot(mom_ma3.index, mom_ma3[\"Prestiti - Tot. - < 1M€\"], label=\"<1M€\")\naxes[2].plot(mom_ma3.index, mom_ma3[\"Prestiti - Tot. - > 1M€\"], label=\">1M€\")\naxes[2].axhline(0, color=\"gray\", ls=\"--\", lw=0.8)\naxes[2].set_title(\"MoM su medie mobili 3 mesi\")\naxes[2].set_ylabel(\"%\")\naxes[2].legend(); axes[2].grid(True)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-pdf/cell-13-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\ndf['SERIE'].unique()\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```\narray(['BAM_MIR.M.1300010.MIR5427.9.951.47.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5427.9.951.46.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5427.9.951.1000.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5414.9.951.47.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5414.9.951.46.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5414.9.951.1000.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5411.9.951.47.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5411.9.951.46.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5411.9.951.1000.SBI77.EUR.110.997',\n       'BAM_MIR.M.1300010.MIR5411.5.951.1000.SBI77.EUR.110.997'],\n      dtype=object)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": []
  }
}